# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'

settings = YAML.load_file 'settings.yml'

Vagrant.configure("2") do |config|

    # Disables box update checks (for when working offline)
    config.vm.box_check_update = false

    # Sets up the vagrant box name, ip address, hostname and any synced folders
    config.vm.box = "jonathanbossenger/boss-box-lemp"
    config.vm.network "private_network", ip: settings['site']['ip']
    config.vm.hostname = settings['site']['sitename']
    config.vm.synced_folder "../", "/var/www/public", :mount_options => ["dmode=777", "fmode=777"]

    # Optional NFS. Make sure to comment out the synced_folder above
    #config.vm.synced_folder "../", "/var/www/public", :nfs => { :mount_options => ["dmode=777","fmode=777"] }

    ## Sets up the virtualbox memory and name variables
    config.vm.provider "virtualbox" do |vb|
        vb.memory = settings['site']['virtualmemory']
        vb.name = settings['site']['sitename']
    end

    # Runs a shell provisioner script, which is executed the first time the box is created
    # Use vagrant up --provision to rerun the provisioner
    config.vm.provision "shell" do |s|
        s.path = "setup.sh"
        s.args = [ settings['site']['ip'], settings['site']['sitename'], settings['site']['database'], settings['site']['mysqlpassword'] ]
    end

    # Since Vagrant 2.1.0, triggers are supported out of the box
    # Backup database before halting VM
    config.trigger.before :halt do |trigger|
          trigger.warn = "Backing up database..."
          trigger.run_remote = {inline: "mysqldump -uroot -p#{settings['site']['mysqlpassword']} #{settings['site']['database']} > /var/www/public/#{settings['site']['database']}.sql"}
    end

end
